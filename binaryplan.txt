                try:
                    xpercentage = (((xt - vc.xmin) * 100) / (vc.xmax - vc.xmin)) / 100 #TESTING NEEDED AM UNSURE IF VALUES NEED TO BE FLIPPED
                    ypercentage = (((yt - vc.ymin) * 100) / (vc.ymax - vc.ymin)) / 100
                    if LBlink <= 0.125:
                      LBlink1 = false
                      LBlink2 = false
                      LBlink4 = false
                    elif LBlink > 0.125 and LBlink <= 0.25:
                      LBlink1 = true
                      LBlink2 = false
                      LBlink4 = false
                    elif LBlink > 0.25 and LBlink <= 0.375:
                      LBlink1 = false
                      LBlink2 = true
                      LBlink4 = false
                    elif LBlink > 0.375 and LBlink <= 0.5:
                      LBlink1 = true
                      LBlink2 = true
                      LBlink4 = false
                    elif LBlink > 0.5 and LBlink <= 0.625:
                      LBlink1 = false
                      LBlink2 = false
                      LBlink4 = true
                    elif LBlink > 0.625 and LBlink <= 0.75:
                      LBlink1 = true
                      LBlink2 = false
                      LBlink4 = true
                    elif LBlink > 0.75 and LBlink <= 0.875:
                      LBlink1 = false
                      LBlink2 = true
                      LBlink4 = true
                    elif LBlink > 0.875 and LBlink <= 1:
                      LBlink1 = true
                      LBlink2 = true
                      LBlink4 = true
                      
                    if RBlink <= 0.125:
                      RBlink1 = false
                      RBlink2 = false
                      RBlink4 = false
                    elif RBlink > 0.125 and RBlink <= 0.25:
                      RBlink1 = true
                      RBlink2 = false
                      RBlink4 = false
                    elif RBlink > 0.25 and RBlink <= 0.375:
                      RBlink1 = false
                      RBlink2 = true
                      RBlink4 = false
                    elif RBlink > 0.375 and RBlink <= 0.5:
                      RBlink1 = true
                      RBlink2 = true
                      RBlink4 = false
                    elif RBlink > 0.5 and RBlink <= 0.625:
                      RBlink1 = false
                      RBlink2 = false
                      RBlink4 = true
                    elif RBlink > 0.625 and RBlink <= 0.75:
                      RBlink1 = true
                      RBlink2 = false
                      RBlink4 = true
                    elif RBlink > 0.75 and RBlink <= 0.875:
                      RBlink1 = false
                      RBlink2 = true
                      RBlink4 = true
                    elif RBlink > 0.875 and RBlink <= 1:
                      RBlink1 = true
                      RBlink2 = true
                      RBlink4 = true
                
                    client.send_message("/Avatar/LBlink1", LBlink1)
                    client.send_message("/Avatar/LBlink2", LBlink2)
                    client.send_message("/Avatar/LBlink4", LBlink4)
                    client.send_message("/Avatar/RBlink1", RBlink1)
                    client.send_message("/Avatar/RBlink2", RBlink2)
                    client.send_message("/Avatar/RBlink4", RBlink4)
                    print('L: ', LBlink, ' R: ', RBlink)
    try:
        OSCip="127.0.0.1" 
        OSCport=9000 #VR Chat OSC port
        client = udp_client.SimpleUDPClient(OSCip, OSCport)
    except:
        print('[ERROR] Connection to VR Chat via OSC Failed')
            
    try:
        camadd= open("cam.txt","r+")
        src = camadd.read().strip()
        camadd.close  
    except:
        addressipn = input('Enter IP Stream Address of Camera :>: ')
        writet(addressipn)
        src = addressipn.strip().lower()
    

    threaded_camera = ThreadedCamera(src)

    h = 1 #defines hight value so blink check doesnt error out
    ronce = 0
    while True:
        try:   
            if ronce == 0:  
                vc()
                ronce = 1
            threaded_camera.show_frame()
        except AttributeError:
            pass
